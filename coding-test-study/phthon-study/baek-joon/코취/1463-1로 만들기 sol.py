'''
문제
정수 X에 사용할 수 있는 연산은 다음과 같이 세 가지 이다.

X가 3으로 나누어 떨어지면, 3으로 나눈다.
X가 2로 나누어 떨어지면, 2로 나눈다.
1을 뺀다.
정수 N이 주어졌을 때, 위와 같은 연산 세 개를 적절히 사용해서 1을 만들려고 한다. 연산을 사용하는 횟수의 최솟값을 출력하시오.

입력
첫째 줄에 1보다 크거나 같고, 106보다 작거나 같은 정수 N이 주어진다.

출력
첫째 줄에 연산을 하는 횟수의 최솟값을 출력한다.

2->1
'''
import sys

input = sys.stdin.readline

n = int(input())

# DP[i] = i 를 1로 만들기 위해 필요한 최소 연산 횟수로 정의
DP = [0] * 1000001

# DP 배열의 초기값 설정
DP[2], DP[3] = 1, 1

# 점화식 찾기 DP[i] = min(DP[i//3]+1, DP[i//2]+1, DP[i-1]+1)
for i in range(4, n + 1):
    if i % 3 == 0 and i % 2 == 0:
        DP[i] = min(DP[i // 3] + 1, DP[i // 2] + 1, DP[i - 1] + 1)
    elif i % 3 == 0:
        DP[i] = min(DP[i // 3] + 1, DP[i - 1] + 1)
    elif i % 2 == 0:
        DP[i] = min(DP[i // 2] + 1, DP[i - 1] + 1)
    else:
        DP[i] = DP[i - 1] + 1

print(DP[n])
